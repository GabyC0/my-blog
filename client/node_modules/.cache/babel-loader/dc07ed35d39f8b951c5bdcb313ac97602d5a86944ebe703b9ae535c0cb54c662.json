{"ast":null,"code":"var _jsxFileName = \"/Users/gaby/Techtonica/fs-blog/my-blog/src/Pages/Article.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport articles from \"./article-content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Article = () => {\n  _s();\n  //pull article id straight from useParams, which is an object with keys of \"articleId\" value: whatever the current string at the specific part of URL\n  const {\n    articleId\n  } = useParams();\n  //using js find function to specify article with a name property equal to article id\n  const article = articles.find(article => article.name === articleId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), article.content.map((paragraph, i) =>\n    /*#__PURE__*/\n    //since list will never change, we can add i here as the key\n    _jsxDEV(\"p\", {\n      children: paragraph\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n_s(Article, \"bwklPfwmt8cyYk/7JVDi5Qnaj08=\", false, function () {\n  return [useParams];\n});\n_c = Article;\nexport default Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["useParams","articles","jsxDEV","_jsxDEV","Fragment","_Fragment","Article","_s","articleId","article","find","name","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","map","paragraph","i","_c","$RefreshReg$"],"sources":["/Users/gaby/Techtonica/fs-blog/my-blog/src/Pages/Article.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport articles from \"./article-content\";\n\nconst Article = () => {\n  //pull article id straight from useParams, which is an object with keys of \"articleId\" value: whatever the current string at the specific part of URL\n  const { articleId } = useParams();\n  //using js find function to specify article with a name property equal to article id\n  const article = articles.find(article => article.name === articleId);\n\n  \n\n  return (\n    <>\n      <h1>{article.title}</h1>\n        {article.content.map((paragraph, i) => (\n          //since list will never change, we can add i here as the key\n          <p key={i}>{paragraph}</p>\n        ))}\n    </>\n  );\n};\n\nexport default Article;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM;IAAEC;EAAU,CAAC,GAAGR,SAAS,EAAE;EACjC;EACA,MAAMS,OAAO,GAAGR,QAAQ,CAACS,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACE,IAAI,KAAKH,SAAS,CAAC;EAIpE,oBACEL,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAKH,OAAO,CAACI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACrBR,OAAO,CAACS,OAAO,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,CAAC;IAAA;IAChC;IACAlB,OAAA;MAAAS,QAAA,EAAYQ;IAAS,GAAbC,CAAC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV,CAAC;EAAA,gBACH;AAEP,CAAC;AAACV,EAAA,CAjBID,OAAO;EAAA,QAEWN,SAAS;AAAA;AAAAsB,EAAA,GAF3BhB,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}